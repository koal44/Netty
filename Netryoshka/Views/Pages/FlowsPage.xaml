<Page x:Class="Netryoshka.FlowsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:design="clr-namespace:Netryoshka.DesignTime"
      xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
      xmlns:local="clr-namespace:Netryoshka"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      Title="PacketPage"
      d:DataContext="{d:DesignInstance design:FlowsPageDesignViewModel,
                                       IsDesignTimeCreatable=True}"
      d:DesignHeight="450"
      d:DesignWidth="800"
      ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
      ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      ScrollViewer.CanContentScroll="False"
      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
      ScrollViewer.IsDeferredScrollingEnabled="False"
      ScrollViewer.VerticalScrollBarVisibility="Disabled"
      mc:Ignorable="d">
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <Grid Grid.Row="0">
      <Grid.RowDefinitions>
        <RowDefinition Height="auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.Resources>
        <Style BasedOn="{StaticResource {x:Type ComboBox}}"
               TargetType="{x:Type ComboBox}">
          <Setter Property="MinWidth" Value="200" />
          <Setter Property="VerticalAlignment" Value="Center" />
          <Setter Property="Margin" Value="10,2" />
          <Setter Property="Padding" Value="5" />
          <Setter Property="HorizontalAlignment" Value="Stretch" />
          <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <DataTemplate x:Key="PivotComboBoxTemplate">
          <TextBlock>
            <TextBlock.Text>
              <MultiBinding Converter="{local:InteractionEndpointAndModeToTextConverter}">
                <Binding Path="." />
                <Binding Path="DataContext.PivotCBDisplayMode"
                         RelativeSource="{RelativeSource FindAncestor,
                                                         AncestorType={x:Type ComboBox}}" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="OrbitComboBoxTemplate">
          <TextBlock>
            <TextBlock.Text>
              <MultiBinding Converter="{local:InteractionEndpointAndModeToTextConverter}">
                <Binding Path="." />
                <Binding Path="DataContext.OrbitCBDisplayMode"
                         RelativeSource="{RelativeSource FindAncestor,
                                                         AncestorType={x:Type ComboBox}}" />
              </MultiBinding>
            </TextBlock.Text>
          </TextBlock>
        </DataTemplate>
      </Grid.Resources>
      <ComboBox Grid.Row="0"
                Grid.Column="0"
                ItemTemplate="{StaticResource PivotComboBoxTemplate}"
                ItemsSource="{Binding PivotEndpoints}"
                SelectedItem="{Binding SelectedPivotEndpoint, Mode=TwoWay}" />
      <ComboBox Grid.Row="0"
                Grid.Column="1"
                ItemTemplate="{StaticResource OrbitComboBoxTemplate}"
                ItemsSource="{Binding OrbitEndpoints}"
                SelectedItem="{Binding SelectedOrbitEndpoint, Mode=TwoWay}" />
    </Grid>
    <Border Grid.Row="1"
            Margin="10"
            Background="{DynamicResource SolidBackgroundFillColorTertiaryBrush}"
            CornerRadius="10">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="auto" />
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Name="ControlBarGrid"
              Grid.Row="0"
              Height="40"
              Margin="10,10">
          <Grid.Resources>
            <Style TargetType="{x:Type TextBlock}">
              <Setter Property="FontSize" Value="9" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type ComboBox}}"
                   TargetType="{x:Type ComboBox}">
              <Setter Property="FontSize" Value="9" />
            </Style>
            <Style x:Key="HoverButton"
                   BasedOn="{StaticResource {x:Type Button}}"
                   TargetType="{x:Type Button}">
              <Setter Property="Padding" Value="0" />
              <Setter Property="Background" Value="Transparent" />
              <Setter Property="BorderThickness" Value="0" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Button}">
                    <!--  transparent bg for hit testing  -->
                    <Border Padding="{TemplateBinding Padding}"
                            Background="Transparent">
                      <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                      <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{Binding Path=(local:MouseOverBrushProperty.Value), RelativeSource={RelativeSource Self}}" />
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </Grid.Resources>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
          </Grid.ColumnDefinitions>
          <StackPanel Grid.Column="0"
                      HorizontalAlignment="Left"
                      Orientation="Horizontal">
            <local:BotButton Width="{Binding ElementName=ControlBarGrid, Path=Height}"
                             Height="{Binding ElementName=ControlBarGrid, Path=Height}"
                             BotPadding="4,1,4,4"
                             FlowEndpointRole="Pivot"
                             IsSelected="{Binding SelectedBotRole, Converter={local:EnumStringComparisonConverter}, ConverterParameter=Pivot}"
                             PathData="{StaticResource SeriousBotBorderless}" />
            <StackPanel x:Name="PivotPanel"
                        Margin="10,0,0,0"
                        VerticalAlignment="Top"
                        Orientation="Vertical">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding PivotProcessInfo}" />
              </StackPanel>
            </StackPanel>
          </StackPanel>
          <StackPanel Grid.Column="1"
                      Margin="80,0,0,0"
                      Orientation="Horizontal">
            <StackPanel Margin="0"
                        Orientation="Horizontal">
              <local:MatryoshkaBox x:Name="MatryoshkaBox"
                                   Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Converter={local:ScaleConverter Amount=1.5}}"
                                   Margin="0,0,5,0"
                                   ParentViewModel="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:FlowsPage}}, Path=DataContext}" />
              <StackPanel Width="40"
                          Margin="0,0,5,0"
                          Orientation="Vertical">
                <TextBlock Text="Layer" />
                <TextBlock VerticalAlignment="Top"
                           Text="{Binding ElementName=MatryoshkaBox, Path=ViewModel.CurrentLayerOnDisplay}" />
              </StackPanel>
            </StackPanel>
            <Separator Margin="0,0,5,0" />
            <Grid Name="FrameOptionsGrid"
                  MinWidth="40"
                  Visibility="{Binding SelectedNetworkLayer, Converter={local:EnumToVisibileOrCollapsedConverter}, ConverterParameter={x:Static local:NetworkLayer.Frame}}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
              </Grid.RowDefinitions>
              <Button Grid.Row="0"
                      HorizontalAlignment="Center"
                      local:MouseOverBrushProperty.Value="{DynamicResource Blue7Brush}"
                      Command="{Binding ToggleFrameDisplayCommand}"
                      Style="{StaticResource HoverButton}">
                <Path Name="WireSharkPath"
                      Data="{StaticResource WireShark}"
                      Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                      Stretch="Uniform" />
              </Button>
              <TextBlock Name="WireSharkTextBlock"
                         Grid.Row="1"
                         Margin="0,3,0,0"
                         Padding="0"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Bottom"
                         Text="{Binding Path=SelectedFrameDisplay, Converter={local:EnumToStringConverter}}" />
            </Grid>
            <Grid Name="TcpOptionsGrid"
                  Visibility="{Binding SelectedNetworkLayer, Converter={local:EnumToVisibileOrCollapsedConverter}, ConverterParameter={x:Static local:NetworkLayer.Tcp}}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
              </Grid.RowDefinitions>
              <Button Grid.Row="0"
                      local:MouseOverBrushProperty.Value="{DynamicResource Blue7Brush}"
                      Command="{Binding ToggleTcpDisplayModeCommand}"
                      Style="{StaticResource HoverButton}">
                <Path Name="HexAsciiPath"
                      Data="{StaticResource HexAscii}"
                      Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                      Stretch="Uniform" />
              </Button>
              <TextBlock Name="TcpEncodingTextBlock"
                         Grid.Row="1"
                         Margin="0,3,0,0"
                         Padding="0"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Bottom"
                         Text="{Binding Path=SelectedTcpEncoding, Converter={local:EnumToStringConverter}}" />
            </Grid>
            <Grid Name="AppOptionsGrid"
                  Visibility="{Binding SelectedNetworkLayer, Converter={local:EnumToVisibileOrCollapsedConverter}, ConverterParameter={x:Static local:NetworkLayer.App}}">
              <StackPanel Orientation="Horizontal">
                <Grid Margin="0,0,15,0"
                      VerticalAlignment="Center">
                  <ComboBox x:Name="DeframingMethodComboBox"
                            Width="120"
                            MinHeight="16"
                            Padding="3"
                            ItemsSource="{Binding DeframeMethods}"
                            SelectedItem="{Binding SelectedDeframeMethod, Mode=OneWayToSource}"
                            Text="De-Frame Method" />
                  <TextBlock Margin="6,0,0,0"
                             VerticalAlignment="Center"
                             IsHitTestVisible="False"
                             Text="De-Frame Method"
                             Visibility="{Binding SelectedItem, ElementName=DeframingMethodComboBox, Converter={local:NullToVisibileConverter}}" />
                </Grid>
                <Grid Name="HttpsOptionsGrid"
                      Visibility="{Binding SelectedDeframeMethod, Converter={local:EnumToVisibileOrCollapsedConverter}, ConverterParameter={x:Static local:DeframeMethod.Https}}">
                  <StackPanel Orientation="Horizontal">
                    <Button Margin="0,0,5,0"
                            local:MouseOverBrushProperty.Value="{DynamicResource Mango7Brush}"
                            Command="{Binding LoadKeyLogFileWizardCommand}"
                            Style="{StaticResource HoverButton}">
                      <ui:SymbolIcon Symbol="Key24" />
                    </Button>
                    <TextBlock Name="KeyLogFileTextBlock"
                               VerticalAlignment="Center"
                               Text="{Binding KeyLogFileName}" />
                  </StackPanel>
                </Grid>
                <Grid Name="LengthPrefixedOptionsGrid"
                      Visibility="{Binding SelectedDeframeMethod, Converter={local:EnumToVisibileOrCollapsedConverter}, ConverterParameter={x:Static local:DeframeMethod.LengthPrefix}}">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Grid.Resources>
                    <Style BasedOn="{StaticResource MySlider3}"
                           TargetType="Slider">
                      <Setter Property="VerticalAlignment" Value="Center" />
                      <Setter Property="IsMoveToPointEnabled" Value="True" />
                      <Setter Property="Maximum" Value="4" />
                      <Setter Property="Minimum" Value="0" />
                      <Setter Property="Margin" Value="0,0,5,0" />
                      <Setter Property="Orientation" Value="Horizontal" />
                      <Setter Property="TickPlacement" Value="TopLeft" />
                    </Style>
                  </Grid.Resources>
                  <StackPanel Grid.Row="0"
                              Orientation="Horizontal">
                    <Slider Name="PrefixLengthSlider"
                            Value="{Binding MessagePrefixLength}" />
                    <TextBlock VerticalAlignment="Center"
                               Text="Prefix Length" />
                  </StackPanel>
                  <StackPanel Grid.Row="1"
                              Orientation="Horizontal">
                    <Slider Name="TypeLengthSlider"
                            Value="{Binding MessageTypeLength}" />
                    <TextBlock VerticalAlignment="Center"
                               Text="Type Length" />
                  </StackPanel>
                </Grid>
              </StackPanel>
            </Grid>
          </StackPanel>
          <StackPanel Grid.Column="2"
                      HorizontalAlignment="Right"
                      Orientation="Horizontal">
            <local:BotButton Width="{Binding ElementName=ControlBarGrid, Path=Height}"
                             Height="{Binding ElementName=ControlBarGrid, Path=Height}"
                             BotPadding="7,4,1,3"
                             FlowEndpointRole="Orbit"
                             IsSelected="{Binding SelectedBotRole, Converter={local:EnumStringComparisonConverter}, ConverterParameter=Orbit}"
                             PathData="{StaticResource DitzyBotBorderless}" />
          </StackPanel>
        </Grid>
        <ListBox x:Name="FlowChatListBox"
                 Grid.Row="1"
                 ItemContainerStyle="{DynamicResource FlowChatItemContainerStyle}"
                 ItemTemplateSelector="{StaticResource ChatBubbleSelector}"
                 ItemsSource="{Binding CurrentItemViewModelCollecion}"
                 ScrollViewer.CanContentScroll="{Binding CanContentScroll}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
          <ListBox.ItemsPanel>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel Orientation="Vertical" />
            </ItemsPanelTemplate>
          </ListBox.ItemsPanel>
          <ListBox.Resources>
            <Style x:Key="FlowChatItemContainerStyle"
                   TargetType="{x:Type ListBoxItem}">
              <Setter Property="Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
              <Setter Property="Background" Value="{DynamicResource SystemAccentColorSecondaryBrush}" />
              <Setter Property="BorderBrush" Value="{DynamicResource SystemAccentColorSecondaryBrush}" />
              <Setter Property="Margin" Value="0" />
              <Setter Property="Padding" Value="0" />
              <Setter Property="Border.CornerRadius" Value="0" />
              <Setter Property="SnapsToDevicePixels" Value="True" />
              <Setter Property="OverridesDefaultStyle" Value="True" />
              <Setter Property="MaxHeight" Value="{Binding ElementName=FlowChatListBox, Path=ActualHeight, Converter={local:ScaleConverter Amount=0.8}}" />
              <Setter Property="Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Border"
                            Margin="0"
                            Padding="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderThickness="1"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">
                      <ContentPresenter />
                    </Border>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
          </ListBox.Resources>
        </ListBox>
      </Grid>
    </Border>
  </Grid>
</Page>
