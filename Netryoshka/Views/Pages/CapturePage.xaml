<Page x:Class="Netryoshka.CapturePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:dialogs="clr-namespace:Netryoshka.Views.Dialogs"
      xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:local="clr-namespace:Netryoshka"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
      xmlns:vm="clr-namespace:Netryoshka.ViewModels"
      Title="CapturePage"
      d:DataContext="{d:DesignInstance local:CapturePage,
                                       IsDesignTimeCreatable=False}"
      d:DesignHeight="450"
      d:DesignWidth="800"
      ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
      ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      Foreground="{DynamicResource TextFillColorPrimaryBrush}"
      ScrollViewer.CanContentScroll="False"
      mc:Ignorable="d">

  <Page.Resources>
    <ResourceDictionary>
      <dialogs:FilterEditorDialog x:Key="FilterEditorDialogContent" />
    </ResourceDictionary>
  </Page.Resources>


  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="auto" />
      <RowDefinition Height="auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="10" />
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="0" />
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="0" />
    </Grid.ColumnDefinitions>

    <Grid Grid.Row="0"
          Grid.Column="1"
          Margin="0,0,0,10"
          HorizontalAlignment="Left">
      <ComboBox Name="DevicesComboBox"
                MinWidth="150"
                Padding="2"
                IsEnabled="{Binding IsCapturing, Converter={local:BooleanNegationConverter}}"
                ItemsSource="{Binding DeviceNames}"
                SelectedItem="{Binding SelectedDeviceName}">
        <i:Interaction.Triggers>
          <i:EventTrigger EventName="DropDownOpened">
            <i:InvokeCommandAction Command="{Binding LoadNetworkDevicesCommand}" />
          </i:EventTrigger>
        </i:Interaction.Triggers>
      </ComboBox>
      <TextBlock Margin="6,0,0,0"
                 VerticalAlignment="Center"
                 IsHitTestVisible="False"
                 Text="Select a Device"
                 Visibility="{Binding SelectedItem, ElementName=DevicesComboBox, Converter={local:NullToVisibileConverter}}" />
    </Grid>


    <Grid Grid.Row="1"
          Grid.Column="1"
          Margin="0,0,0,5">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="auto" />
        <ColumnDefinition Width="*" />
        <ColumnDefinition Width="auto" />
      </Grid.ColumnDefinitions>
      <Border Grid.Column="0"
              Margin="0,0,0,5"
              Padding="5,5,5,5"
              Background="{DynamicResource SolidBackgroundFillColorTertiaryBrush}"
              BorderBrush="{DynamicResource SeperatorBrush}"
              BorderThickness="1"
              CornerRadius="10"
              IsEnabled="{Binding IsCapturing, Converter={local:BooleanNegationConverter}}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="0" />
            <ColumnDefinition Width="*" />
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="3" />
            <RowDefinition Height="*" />
            <RowDefinition Height="7" />
            <RowDefinition Height="*" />
          </Grid.RowDefinitions>
          <Grid.Resources>
            <Style BasedOn="{StaticResource {x:Type TextBlock}}"
                   TargetType="TextBlock">
              <Setter Property="Padding" Value="0" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Margin" Value="0,-1,4,0" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="Label">
              <Setter Property="Padding" Value="0" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Margin" Value="20,0,0,0" />
              <Setter Property="Padding" Value="0,0,0,0" />
            </Style>
            <Style BasedOn="{StaticResource {x:Type TextBox}}"
                   TargetType="TextBox">
              <Setter Property="Padding" Value="0" />
              <Setter Property="VerticalAlignment" Value="Center" />
              <Setter Property="Margin" Value="0,0,0,0" />
              <Setter Property="VerticalScrollBarVisibility" Value="Disabled" />
              <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
              <Setter Property="Height" Value="22" />
            </Style>

          </Grid.Resources>


          <StackPanel Grid.Row="0"
                      Grid.Column="0"
                      HorizontalAlignment="Left"
                      Orientation="Vertical">
            <StackPanel HorizontalAlignment="Left"
                        Orientation="Vertical">
              <TextBlock Margin="5,0,10,0"
                         FontSize="18"
                         Text="Filters" />
              <!--  Foreground="{DynamicResource TextPlaceholderColorBrush}"  -->
              <Separator Margin="0,0,0,2" />
            </StackPanel>
          </StackPanel>

          <Grid Grid.Row="0"
                Grid.Column="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto" />
              <ColumnDefinition Width="*" />
              <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <TextBlock Name="CustomFilterTextBlock"
                       Grid.Column="0"
                       Margin="20,0,0,0"
                       FontStyle="Italic"
                       Foreground="{DynamicResource TextFillColorSecondaryBrush}"
                       Text="{Binding CustomFilter}" />
            <StackPanel Grid.Column="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal">
              <StackPanel.Resources>
                <Style BasedOn="{StaticResource {x:Type ui:Button}}"
                       TargetType="ui:Button">
                  <Setter Property="Padding" Value="5" />
                  <Setter Property="Background" Value="Transparent" />
                  <Setter Property="BorderThickness" Value="0" />
                  <Setter Property="FontSize" Value="18" />
                  <Setter Property="Margin" Value="10,0,0,0" />
                </Style>
                <Style TargetType="ui:SymbolIcon">
                  <Setter Property="Filled" Value="True" />
                </Style>
              </StackPanel.Resources>
              <ui:Button Command="{Binding OpenProcessSocketDialogCommand}">
                <ui:Button.Icon>
                  <ui:SymbolIcon Foreground="{DynamicResource Indigo8BBrush}"
                                 Symbol="DeveloperBoardSearch24" />
                </ui:Button.Icon>
              </ui:Button>
              <ui:Button Command="{Binding OpenFilterEditorDialogCommand}"
                         CommandParameter="{StaticResource FilterEditorDialogContent}">
                <ui:Button.Icon>
                  <ui:SymbolIcon Foreground="{DynamicResource Mango6BBrush}"
                                 Symbol="Edit24" />
                </ui:Button.Icon>
              </ui:Button>
            </StackPanel>
          </Grid>
          <TextBlock Grid.Row="2"
                     Grid.Column="0"
                     Margin="5,0,5,0"
                     Text="Remote" />
          <StackPanel Grid.Row="2"
                      Grid.Column="2"
                      Orientation="Horizontal">
            <Label Content="Port: " />
            <TextBox Width="50"
                     Text="{Binding RemotePorts, Mode=TwoWay}" />
            <Label Content="IP: " />
            <TextBox Width="100"
                     Text="{Binding RemoteIPAddresses}" />
          </StackPanel>
          <TextBlock Grid.Row="4"
                     Grid.Column="0"
                     Margin="5,0,5,0"
                     Text="Local" />
          <StackPanel Grid.Row="4"
                      Grid.Column="2"
                      Orientation="Horizontal">
            <Label Content="Port: " />
            <TextBox Width="50"
                     Text="{Binding LocalPorts}" />

            <Label Content="PID: " />
            <TextBox Width="45"
                     Text="{Binding LocalPIDs}" />

            <Label Content="Process: " />
            <TextBox Width="120"
                     Text="{Binding LocalProcessNames}" />
          </StackPanel>
        </Grid>
      </Border>

      <StackPanel Grid.Column="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal">

        <StackPanel.Resources>
          <Style BasedOn="{StaticResource {x:Type ui:Button}}"
                 TargetType="ui:Button">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="1,1,1,1" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}" />
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="FontSize" Value="30" />
            <!--<EventSetter Event="Click" Handler="ButtonAllowBubbleClick"/>-->
          </Style>
        </StackPanel.Resources>

        <ui:Button Command="{Binding StartOrStopCapturingCommand}">
          <ui:Button.Resources>
            <Style TargetType="ui:SymbolIcon">
              <Setter Property="Symbol" Value="Play24" />
              <Setter Property="Foreground" Value="{DynamicResource Green6BBrush}" />
              <Style.Triggers>
                <DataTrigger Binding="{Binding IsCapturing}"
                             Value="True">
                  <Setter Property="Symbol" Value="Pause24" />
                  <Setter Property="Foreground" Value="{DynamicResource Red6BBrush}" />
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </ui:Button.Resources>
          <ui:Button.Icon>
            <ui:SymbolIcon Filled="True" />
          </ui:Button.Icon>
        </ui:Button>

        <ui:Button Command="{Binding ShowSavePCapDialogCommand}">
          <ui:Button.Icon>
            <ui:SymbolIcon Filled="True"
                           Foreground="{DynamicResource Blue7BBrush}"
                           Symbol="Save24" />
          </ui:Button.Icon>
        </ui:Button>

        <ui:Button Command="{Binding ShowLoadPCapDialogCommand}">
          <ui:Button.Icon>
            <ui:SymbolIcon Filled="True"
                           Foreground="{DynamicResource Mango8BBrush}"
                           Symbol="FolderOpen24" />
          </ui:Button.Icon>
        </ui:Button>

        <ui:Button Command="{Binding ShowKeylogDialogCommand}">
          <ui:Button.Icon>
            <ui:SymbolIcon Filled="True"
                           Foreground="{DynamicResource Indigo6BBrush}"
                           Symbol="Key24" />
          </ui:Button.Icon>
        </ui:Button>

      </StackPanel>
    </Grid>

    <ScrollViewer Name="CapturedTextScroller"
                  Grid.Row="2"
                  Grid.Column="1"
                  VerticalScrollBarVisibility="Auto">
      <TextBox x:Name="CapturedTextBox"
               Margin="0,0,0,0"
               HorizontalScrollBarVisibility="Disabled"
               IsReadOnly="True"
               PreviewMouseDoubleClick="DoubleClickSelectsParagraphBlock"
               TextWrapping="Wrap" />
      <!--  local:CapturesPacketsBehavior.AttachedBehavior="True"  -->
    </ScrollViewer>

  </Grid>
</Page>
